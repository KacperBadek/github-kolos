name: Kolos

on:
  push:
    branches:
      - '**'

env:
  DOCKER_USERNAME: hasacz325
  APP_NAME: kolos

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 21

      - name: Install dependencies
        run: npm ci
        working-directory: ./app

      - name: Run tests
        run: npm test
        working-directory: ./app

  lint:
    name: Run Lint
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 21

      - name: Install dependencies
        run: npm ci
        working-directory: ./app

      - name: Run ESLint
        run: npm run lint
        working-directory: ./app

  docker-build:
    name: Build Docker Image and Save Artifact
    runs-on: ubuntu-latest
    needs: [ build-and-test, lint ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t ${{ env.APP_NAME }} ./app
          docker save ${{ env.APP_NAME }} -o app-image.tar

      - name: Upload Docker image as artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: app-image.tar


  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    environment:
      name: staging

    steps:
      - name: Symulacja wdrożenia na staging
        run: |
          echo "Wdrażanie na środowisko staging..."
          sleep 2
          echo "Wdrożenie zakończone"
          echo ""
          echo "Pytanie kontrolne dla osoby zatwierdzającej:"
          echo "Czy wdrożenie na środowisku staging wygląda poprawnie i można kontynuować na produkcję?"

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: deploy-staging
    if: github.ref == 'refs/heads/main' && needs.deploy-staging.result == 'success'

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push docker image
        uses: docker/build-push-action@v6
        with:
          context: ./app
          file: ./app/Dockerfile
          push: true
          tags: ${{ env.DOCKER_USERNAME }}/${{ env.APP_NAME }}:latest

  summary-report:
    name: Generate Summary Report
    runs-on: ubuntu-latest
    if: always()
    needs: [ deploy-production, deploy-staging ]

    steps:
      - name: Generate report
        run: |
          echo "Raport z przebiegu GitHub Actions" > report.txt
          echo "" >> report.txt
          echo "Data: $(date)" >> report.txt
          echo "Commit: ${{ github.sha }}" >> report.txt
          echo "Autor: ${{ github.actor }}" >> report.txt
          echo "" >> report.txt
          echo "Status zadań:" >> report.txt
          echo "- build-and-test: ${{ needs.build-and-test.result || 'nieznany' }}" >> report.txt
          echo "- lint: ${{ needs.lint.result || 'nieznany' }}" >> report.txt
          echo "- docker-build: ${{ needs.docker-build.result || 'nieznany' }}" >> report.txt
          echo "- deploy-staging: ${{ needs.deploy-staging.result || 'nieznany' }}" >> report.txt
          echo "- deploy-production: ${{ needs.deploy-production.result || 'nieznany' }}" >> report.txt

      - name: Upload report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: report
          path: report.txt
